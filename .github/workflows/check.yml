name: Run tests, dependency audit, CS fixer
on: ['push']
jobs:
  check:
    name: Audit & code style checks
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2
      - name: Audit
        run: |
          curl -L https://github.com/fabpot/local-php-security-checker/releases/download/v1.0.0/local-php-security-checker_1.0.0_linux_amd64 -o php-dependency-checker
          chmod +x ./php-dependency-checker
          ./php-dependency-checker
          rm php-dependency-checker
      - name: Install dependencies (for CS fixer)
        run: composer install
      - name: Code Style
        run: composer check

  test:
    name: Unit tests on PHP ${{ matrix.php-versions }}
    needs: [check]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4']
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Install dependencies
        run: composer install
      - name: Test
        run: composer test

  deploy:
    name: Deploy to GitHub
    needs: [check, test]
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/') # only tags
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2
      - name: Build ZIP
        run: ./release/build_release_package.sh
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Shopgate Cart Integration SDK version ${{ github.ref }}
          draft: true
      - name: Upload ZIP to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./shopgate-cart-integration-sdk.zip
          asset_name: shopgate-cart-integration-sdk.zip
          asset_content_type: application/zip
